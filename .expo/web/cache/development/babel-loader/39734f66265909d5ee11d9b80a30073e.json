{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mosiahazuaje/Documentos/apps/wintowin-hero/screens/Login/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as FirebaseRecaptcha from 'expo-firebase-recaptcha';\nimport * as firebase from 'firebase';\nvar FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyDCosAACiucE0-BuG-jxoqYa5kdmP7Db1U\",\n  authDomain: \"wintowin-admin.firebaseapp.com\",\n  projectId: \"wintowin-admin\",\n  storageBucket: \"wintowin-admin.appspot.com\",\n  messagingSenderId: \"201645717063\",\n  appId: \"1:201645717063:web:8cb8aa978af80626e32362\"\n};\nexport default function PhoneAuthScreen(props) {\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      props.navigation.navigate('DetailUserScreen', {\n        user: user.uid\n      });\n    } else {\n      console.log('User not logged in');\n    }\n  });\n  var recaptchaVerifier = React.useRef(null);\n  var verificationCodeTextInput = React.useRef(null);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phoneNumber = _React$useState2[0],\n      setPhoneNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      verificationId = _React$useState4[0],\n      setVerificationId = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      verifyError = _React$useState6[0],\n      setVerifyError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      verifyInProgress = _React$useState8[0],\n      setVerifyInProgress = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      verificationCode = _React$useState10[0],\n      setVerificationCode = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      confirmError = _React$useState12[0],\n      setConfirmError = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      confirmInProgress = _React$useState14[0],\n      setConfirmInProgress = _React$useState14[1];\n\n  var isConfigValid = !!FIREBASE_CONFIG.apiKey;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(FirebaseRecaptcha.FirebaseRecaptchaVerifierModal, {\n    ref: recaptchaVerifier,\n    firebaseConfig: FIREBASE_CONFIG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Firebase Phone Auth\"), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"using expo-firebase-recaptcha\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Enter phone number\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    autoFocus: isConfigValid,\n    autoCompleteType: \"tel\",\n    keyboardType: \"phone-pad\",\n    textContentType: \"telephoneNumber\",\n    placeholder: \"+1 999 999 9999\",\n    editable: !verificationId,\n    onChangeText: function onChangeText(phoneNumber) {\n      return setPhoneNumber(phoneNumber);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: (verificationId ? 'Resend' : 'Send') + \" Verification Code\",\n    disabled: !phoneNumber,\n    onPress: function _callee() {\n      var phoneProvider, _verificationCodeText, _verificationId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              phoneProvider = new firebase.auth.PhoneAuthProvider();\n              _context.prev = 1;\n              setVerifyError(undefined);\n              setVerifyInProgress(true);\n              setVerificationId('');\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n            case 7:\n              _verificationId = _context.sent;\n              setVerifyInProgress(false);\n              setVerificationId(_verificationId);\n              (_verificationCodeText = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText.focus();\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              setVerifyError(_context.t0);\n              setVerifyInProgress(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), verifyError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Error: \" + verifyError.message), verifyInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 30\n    }\n  }), verificationId ? React.createElement(Text, {\n    style: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"A verification code has been sent to your phone\") : undefined, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Enter verification code\"), React.createElement(TextInput, {\n    ref: verificationCodeTextInput,\n    style: styles.textInput,\n    editable: !!verificationId,\n    placeholder: \"123456\",\n    onChangeText: function onChangeText(verificationCode) {\n      return setVerificationCode(verificationCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Confirm Verification Code\",\n    disabled: !verificationCode,\n    onPress: function _callee2() {\n      var _verificationCodeText2, credential, authResult;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setConfirmError(undefined);\n              setConfirmInProgress(true);\n              credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n            case 6:\n              authResult = _context2.sent;\n              setConfirmInProgress(false);\n              setVerificationId('');\n              setVerificationCode('');\n              (_verificationCodeText2 = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText2.clear();\n              Alert.alert('Phone authentication successful!');\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              setConfirmError(_context2.t0);\n              setConfirmInProgress(false);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), confirmError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }\n  }, \"Error: \" + confirmError.message), confirmInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  })), !isConfigValid && React.createElement(View, {\n    style: styles.overlay,\n    pointerEvents: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"To get started, set a valid FIREBASE_CONFIG in App.tsx.\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  content: {\n    marginTop: 50\n  },\n  title: {\n    marginBottom: 2,\n    fontSize: 29,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    marginBottom: 10,\n    opacity: 0.35,\n    fontWeight: 'bold'\n  },\n  text: {\n    marginTop: 30,\n    marginBottom: 4\n  },\n  textInput: {\n    marginBottom: 8,\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  error: {\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'red'\n  },\n  success: {\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'blue'\n  },\n  loader: {\n    marginTop: 10\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: '#FFFFFFC0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  overlayText: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/mosiahazuaje/Documentos/apps/wintowin-hero/screens/Login/Login.js"],"names":["React","FirebaseRecaptcha","firebase","FIREBASE_CONFIG","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","PhoneAuthScreen","props","auth","onAuthStateChanged","user","navigation","navigate","uid","console","log","recaptchaVerifier","useRef","verificationCodeTextInput","useState","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verifyError","setVerifyError","verifyInProgress","setVerifyInProgress","verificationCode","setVerificationCode","confirmError","setConfirmError","confirmInProgress","setConfirmInProgress","isConfigValid","styles","container","content","title","subtitle","text","textInput","phoneProvider","PhoneAuthProvider","undefined","verifyPhoneNumber","current","focus","error","message","loader","success","credential","signInWithCredential","authResult","clear","Alert","alert","overlay","overlayText","StyleSheet","create","flex","padding","marginTop","marginBottom","fontSize","fontWeight","opacity","color","absoluteFillObject","backgroundColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n  Button,\n  Alert,\n  ActivityIndicator,\n  Platform,\n} from 'react-native';\nimport * as FirebaseRecaptcha from 'expo-firebase-recaptcha';\nimport * as firebase from 'firebase';\n\n// PROVIDE VALID FIREBASE CONFIG HERE\n// https://firebase.google.com/docs/web/setup\nconst FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyDCosAACiucE0-BuG-jxoqYa5kdmP7Db1U\",\n  authDomain: \"wintowin-admin.firebaseapp.com\",\n  projectId: \"wintowin-admin\",\n  storageBucket: \"wintowin-admin.appspot.com\",\n  messagingSenderId: \"201645717063\",\n  appId: \"1:201645717063:web:8cb8aa978af80626e32362\"\n};\n\nexport default function PhoneAuthScreen(props) {\n\n  firebase.auth().onAuthStateChanged((user) => {\n    if(user) {\n      props.navigation.navigate('DetailUserScreen',{\n        user:user.uid\n      });\n      } else {\n      console.log('User not logged in')\n    }\n  })\n\n  const recaptchaVerifier = React.useRef(null);\n  const verificationCodeTextInput = React.useRef(null);\n  const [phoneNumber, setPhoneNumber] = React.useState('');\n  const [verificationId, setVerificationId] = React.useState('');\n  const [verifyError, setVerifyError] = React.useState();\n  const [verifyInProgress, setVerifyInProgress] = React.useState(false);\n  const [verificationCode, setVerificationCode] = React.useState('');\n  const [confirmError, setConfirmError] = React.useState();\n  const [confirmInProgress, setConfirmInProgress] = React.useState(false);\n  const isConfigValid = !!FIREBASE_CONFIG.apiKey;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.content}>\n        <FirebaseRecaptcha.FirebaseRecaptchaVerifierModal\n          ref={recaptchaVerifier}\n          firebaseConfig={FIREBASE_CONFIG}\n        />\n        <Text style={styles.title}>Firebase Phone Auth</Text>\n        <Text style={styles.subtitle}>using expo-firebase-recaptcha</Text>\n        <Text style={styles.text}>Enter phone number</Text>\n        <TextInput\n          style={styles.textInput}\n          autoFocus={isConfigValid}\n          autoCompleteType=\"tel\"\n          keyboardType=\"phone-pad\"\n          textContentType=\"telephoneNumber\"\n          placeholder=\"+1 999 999 9999\"\n          editable={!verificationId}\n          onChangeText={(phoneNumber) => setPhoneNumber(phoneNumber)}\n        />\n        <Button\n          title={`${verificationId ? 'Resend' : 'Send'} Verification Code`}\n          disabled={!phoneNumber}\n          onPress={async () => {\n            const phoneProvider = new firebase.auth.PhoneAuthProvider();\n            try {\n              setVerifyError(undefined);\n              setVerifyInProgress(true);\n              setVerificationId('');\n              const verificationId = await phoneProvider.verifyPhoneNumber(\n                phoneNumber,\n                // @ts-ignore\n                recaptchaVerifier.current\n              );\n              setVerifyInProgress(false);\n              setVerificationId(verificationId);\n              verificationCodeTextInput.current?.focus();\n            } catch (err) {\n              setVerifyError(err);\n              setVerifyInProgress(false);\n            }\n          }}\n        />\n        {verifyError && <Text style={styles.error}>{`Error: ${verifyError.message}`}</Text>}\n        {verifyInProgress && <ActivityIndicator style={styles.loader} />}\n        {verificationId ? (\n          <Text style={styles.success}>A verification code has been sent to your phone</Text>\n        ) : (\n          undefined\n        )}\n        <Text style={styles.text}>Enter verification code</Text>\n        <TextInput\n          ref={verificationCodeTextInput}\n          style={styles.textInput}\n          editable={!!verificationId}\n          placeholder=\"123456\"\n          onChangeText={(verificationCode) => setVerificationCode(verificationCode)}\n        />\n        <Button\n          title=\"Confirm Verification Code\"\n          disabled={!verificationCode}\n          onPress={async () => {\n            try {\n              setConfirmError(undefined);\n              setConfirmInProgress(true);\n              const credential = firebase.auth.PhoneAuthProvider.credential(\n                verificationId,\n                verificationCode\n              );\n              const authResult = await firebase.auth().signInWithCredential(credential);\n              setConfirmInProgress(false);\n              setVerificationId('');\n              setVerificationCode('');\n              verificationCodeTextInput.current?.clear();\n              Alert.alert('Phone authentication successful!');\n            } catch (err) {\n              setConfirmError(err);\n              setConfirmInProgress(false);\n            }\n          }}\n        />\n        {confirmError && <Text style={styles.error}>{`Error: ${confirmError.message}`}</Text>}\n        {confirmInProgress && <ActivityIndicator style={styles.loader} />}\n      </View>\n      {!isConfigValid && (\n        <View style={styles.overlay} pointerEvents=\"none\">\n          <Text style={styles.overlayText}>\n            To get started, set a valid FIREBASE_CONFIG in App.tsx.\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  content: {\n    marginTop: 50,\n  },\n  title: {\n    marginBottom: 2,\n    fontSize: 29,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    marginBottom: 10,\n    opacity: 0.35,\n    fontWeight: 'bold',\n  },\n  text: {\n    marginTop: 30,\n    marginBottom: 4,\n  },\n  textInput: {\n    marginBottom: 8,\n    fontSize: 17,\n    fontWeight: 'bold',\n  },\n  error: {\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'red',\n  },\n  success: {\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'blue',\n  },\n  loader: {\n    marginTop: 10,\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#FFFFFFC0',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  overlayText: {\n    fontWeight: 'bold',\n  },\n});"]},"metadata":{},"sourceType":"module"}