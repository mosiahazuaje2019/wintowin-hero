{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { CodedError } from '@unimodules/core';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FirebaseRecaptcha from \"./FirebaseRecaptcha\";\n\nvar FirebaseRecaptchaVerifierModal = function (_React$Component) {\n  _inherits(FirebaseRecaptchaVerifierModal, _React$Component);\n\n  var _super = _createSuper(FirebaseRecaptchaVerifierModal);\n\n  function FirebaseRecaptchaVerifierModal() {\n    var _this;\n\n    _classCallCheck(this, FirebaseRecaptchaVerifierModal);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      visible: false,\n      visibleLoaded: false,\n      invisibleLoaded: false,\n      invisibleVerify: false,\n      invisibleKey: 1,\n      resolve: undefined,\n      reject: undefined\n    };\n\n    _this.onVisibleLoad = function () {\n      _this.setState({\n        visibleLoaded: true\n      });\n    };\n\n    _this.onInvisibleLoad = function () {\n      _this.setState({\n        invisibleLoaded: true\n      });\n    };\n\n    _this.onFullChallenge = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                invisibleVerify: false,\n                visible: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onError = function () {\n      var reject = _this.state.reject;\n\n      if (reject) {\n        reject(new CodedError('ERR_FIREBASE_RECAPTCHA_ERROR', 'Failed to load reCAPTCHA'));\n      }\n\n      _this.setState({\n        visible: false,\n        invisibleVerify: false\n      });\n    };\n\n    _this.onVerify = function (token) {\n      var resolve = _this.state.resolve;\n\n      if (resolve) {\n        resolve(token);\n      }\n\n      _this.setState(function (state) {\n        return {\n          visible: false,\n          invisibleVerify: false,\n          invisibleLoaded: false,\n          invisibleKey: state.invisibleKey + 1\n        };\n      });\n    };\n\n    _this.cancel = function () {\n      var reject = _this.state.reject;\n\n      if (reject) {\n        reject(new CodedError('ERR_FIREBASE_RECAPTCHA_CANCEL', 'Cancelled by user'));\n      }\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onDismiss = function () {\n      if (_this.state.visible) {\n        _this.cancel();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FirebaseRecaptchaVerifierModal, [{\n    key: \"type\",\n    get: function get() {\n      return 'recaptcha';\n    }\n  }, {\n    key: \"verify\",\n    value: function verify() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function verify$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                if (_this2.props.attemptInvisibleVerification) {\n                  _this2.setState({\n                    invisibleVerify: true,\n                    resolve: resolve,\n                    reject: reject\n                  });\n                } else {\n                  _this2.setState({\n                    visible: true,\n                    visibleLoaded: false,\n                    resolve: resolve,\n                    reject: reject\n                  });\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          cancelLabel = _this$props.cancelLabel,\n          attemptInvisibleVerification = _this$props.attemptInvisibleVerification,\n          otherProps = _objectWithoutProperties(_this$props, [\"title\", \"cancelLabel\", \"attemptInvisibleVerification\"]);\n\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          visibleLoaded = _this$state.visibleLoaded,\n          invisibleLoaded = _this$state.invisibleLoaded,\n          invisibleVerify = _this$state.invisibleVerify,\n          invisibleKey = _this$state.invisibleKey;\n      return React.createElement(View, {\n        style: styles.container\n      }, attemptInvisibleVerification && React.createElement(FirebaseRecaptcha, _extends({}, otherProps, {\n        key: \"invisible\" + invisibleKey,\n        style: styles.invisible,\n        onLoad: this.onInvisibleLoad,\n        onError: this.onError,\n        onVerify: this.onVerify,\n        onFullChallenge: this.onFullChallenge,\n        invisible: true,\n        verify: invisibleLoaded && invisibleVerify\n      })), React.createElement(Modal, {\n        visible: visible,\n        animationType: \"slide\",\n        presentationStyle: \"pageSheet\",\n        onRequestClose: this.cancel,\n        onDismiss: this.onDismiss\n      }, React.createElement(SafeAreaView, {\n        style: styles.modalContainer\n      }, React.createElement(View, {\n        style: styles.header\n      }, React.createElement(Text, {\n        style: styles.title\n      }, title), React.createElement(View, {\n        style: styles.cancel\n      }, React.createElement(Button, {\n        title: cancelLabel || FirebaseRecaptchaVerifierModal.defaultProps.cancelLabel,\n        onPress: this.cancel\n      }))), React.createElement(View, {\n        style: styles.content\n      }, React.createElement(FirebaseRecaptcha, _extends({}, otherProps, {\n        style: styles.content,\n        onLoad: this.onVisibleLoad,\n        onError: this.onError,\n        onVerify: this.onVerify\n      })), !visibleLoaded ? React.createElement(View, {\n        style: styles.loader\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\"\n      })) : undefined))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (!props.attemptInvisibleVerification && state.invisibleLoaded) {\n        return {\n          invisibleLoaded: false,\n          invisibleVerify: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return FirebaseRecaptchaVerifierModal;\n}(React.Component);\n\nexport { FirebaseRecaptchaVerifierModal as default };\nFirebaseRecaptchaVerifierModal.defaultProps = {\n  title: 'reCAPTCHA',\n  cancelLabel: 'Cancel'\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 0,\n    height: 0\n  },\n  invisible: {\n    width: 300,\n    height: 300\n  },\n  modalContainer: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: '#FBFBFB',\n    height: 44,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomColor: '#CECECE',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  cancel: {\n    position: 'absolute',\n    left: 8,\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  content: {\n    flex: 1\n  },\n  loader: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    paddingTop: 20,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  })\n});","map":{"version":3,"sources":["../src/FirebaseRecaptchaVerifierModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError } from '@unimodules/core';\nimport * as React from 'react';\nimport {\n  StyleSheet,\n  Button,\n  View,\n  SafeAreaView,\n  Text,\n  Modal,\n  ActivityIndicator,\n} from 'react-native';\n\nimport FirebaseRecaptcha from './FirebaseRecaptcha';\nimport { FirebaseAuthApplicationVerifier } from './FirebaseRecaptcha.types';\n\ninterface Props\n  extends Omit<\n    React.ComponentProps<typeof FirebaseRecaptcha>,\n    'onVerify' | 'invisible' | 'verify' | 'onVerify' | 'onLoad' | 'onError' | 'onFullChallenge'\n  > {\n  title?: string;\n  cancelLabel?: string;\n  attemptInvisibleVerification?: boolean;\n}\ninterface State {\n  visible: boolean;\n  visibleLoaded: boolean;\n  invisibleLoaded: boolean;\n  invisibleVerify: boolean;\n  invisibleKey: number;\n  resolve?: (token: string) => void;\n  reject?: (error: Error) => void;\n}\n\nexport default class FirebaseRecaptchaVerifierModal extends React.Component<Props, State>\n  implements FirebaseAuthApplicationVerifier {\n  static defaultProps = {\n    title: 'reCAPTCHA',\n    cancelLabel: 'Cancel',\n  };\n\n  state: State = {\n    visible: false,\n    visibleLoaded: false,\n    invisibleLoaded: false,\n    invisibleVerify: false,\n    invisibleKey: 1,\n    resolve: undefined,\n    reject: undefined,\n  };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (!props.attemptInvisibleVerification && state.invisibleLoaded) {\n      return {\n        invisibleLoaded: false,\n        invisibleVerify: false,\n      };\n    }\n    return null;\n  }\n\n  get type(): string {\n    return 'recaptcha';\n  }\n\n  async verify(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (this.props.attemptInvisibleVerification) {\n        this.setState({\n          invisibleVerify: true,\n          resolve,\n          reject,\n        });\n      } else {\n        this.setState({\n          visible: true,\n          visibleLoaded: false,\n          resolve,\n          reject,\n        });\n      }\n    });\n  }\n\n  private onVisibleLoad = () => {\n    this.setState({\n      visibleLoaded: true,\n    });\n  };\n\n  private onInvisibleLoad = () => {\n    this.setState({\n      invisibleLoaded: true,\n    });\n  };\n\n  private onFullChallenge = async () => {\n    this.setState({\n      invisibleVerify: false,\n      visible: true,\n    });\n  };\n\n  private onError = () => {\n    const { reject } = this.state;\n    if (reject) {\n      reject(new CodedError('ERR_FIREBASE_RECAPTCHA_ERROR', 'Failed to load reCAPTCHA'));\n    }\n    this.setState({\n      visible: false,\n      invisibleVerify: false,\n    });\n  };\n\n  private onVerify = (token: string) => {\n    const { resolve } = this.state;\n    if (resolve) {\n      resolve(token);\n    }\n    this.setState(state => ({\n      visible: false,\n      invisibleVerify: false,\n      invisibleLoaded: false,\n      invisibleKey: state.invisibleKey + 1,\n    }));\n  };\n\n  cancel = () => {\n    const { reject } = this.state;\n    if (reject) {\n      reject(new CodedError('ERR_FIREBASE_RECAPTCHA_CANCEL', 'Cancelled by user'));\n    }\n    this.setState({\n      visible: false,\n    });\n  };\n\n  onDismiss = () => {\n    // onDismiss should be called when the user dismisses the\n    // modal using a swipe gesture. Due to a bug in RN this\n    // unfortunately doesn't work :/\n    //https://github.com/facebook/react-native/issues/26892\n    if (this.state.visible) {\n      this.cancel();\n    }\n  };\n\n  render() {\n    const { title, cancelLabel, attemptInvisibleVerification, ...otherProps } = this.props;\n    const { visible, visibleLoaded, invisibleLoaded, invisibleVerify, invisibleKey } = this.state;\n    return (\n      <View style={styles.container}>\n        {attemptInvisibleVerification && (\n          <FirebaseRecaptcha\n            {...otherProps}\n            key={`invisible${invisibleKey}`}\n            style={styles.invisible}\n            onLoad={this.onInvisibleLoad}\n            onError={this.onError}\n            onVerify={this.onVerify}\n            onFullChallenge={this.onFullChallenge}\n            invisible\n            verify={invisibleLoaded && invisibleVerify}\n          />\n        )}\n        <Modal\n          visible={visible}\n          animationType=\"slide\"\n          presentationStyle=\"pageSheet\"\n          onRequestClose={this.cancel}\n          onDismiss={this.onDismiss}>\n          <SafeAreaView style={styles.modalContainer}>\n            <View style={styles.header}>\n              <Text style={styles.title}>{title}</Text>\n              <View style={styles.cancel}>\n                <Button\n                  title={cancelLabel || FirebaseRecaptchaVerifierModal.defaultProps.cancelLabel}\n                  onPress={this.cancel}\n                />\n              </View>\n            </View>\n            <View style={styles.content}>\n              <FirebaseRecaptcha\n                {...otherProps}\n                style={styles.content}\n                onLoad={this.onVisibleLoad}\n                onError={this.onError}\n                onVerify={this.onVerify}\n              />\n              {!visibleLoaded ? (\n                <View style={styles.loader}>\n                  <ActivityIndicator size=\"large\" />\n                </View>\n              ) : (\n                undefined\n              )}\n            </View>\n          </SafeAreaView>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 0,\n    height: 0,\n  },\n  invisible: {\n    width: 300,\n    height: 300,\n  },\n  modalContainer: {\n    flex: 1,\n  },\n  header: {\n    backgroundColor: '#FBFBFB',\n    height: 44,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomColor: '#CECECE',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  cancel: {\n    position: 'absolute',\n    left: 8,\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n  content: {\n    flex: 1,\n  },\n  loader: {\n    ...StyleSheet.absoluteFillObject,\n    paddingTop: 20,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}